//
// Custom mixins
//


// Element-invisible as defined by http://snook.ca/archives/html_and_css/hiding-content-for-accessibility
@mixin element-invisible {
  clip: rect(1px, 1px, 1px, 1px);
  height: 1px;
  overflow: hidden;
  position: absolute !important;
  width: 1px;
}


// Turns off the element-invisible effect.
@mixin element-invisible-off {
  clip: auto;
  height: auto;
  overflow: auto;
  position: static !important;
  width: auto;
}


// Focusable
@mixin element-focusable {
  @include element-invisible;

  &:active,
  &:focus {
    @include element-invisible-off;
  }
}


// SVG background
$image-path: '../images' !default;
$fallback-extension: 'png' !default;
// $retina-suffix: '@2x';

@mixin svg-bg($name, $dir) {
  background-image: url(#{$image-path}/#{$dir}/svg/#{$name}.svg);
  background-repeat: no-repeat;

  // No SVG support
  .no-svg & {
    background-image: url(#{$image-path}/#{$dir}/#{$name}.#{$fallback-extension});
  }

  // Retina image
  // @if $retina == "retina" {
  //   @include breakpoint($bp-hidpi) {
  //     .no-svg & {
  //       background-image: url(#{$image-path}/#{$dir}/2x/#{$name}#{$retina-suffix}.#{$fallback-extension});
  //     }
  //   }
  // }
}


// Font size - Rem and PX fallback
@mixin font-size($org) {
  font-size: $org + px;
  font-size: ($org/$base__font-size_integer) + rem;
}
